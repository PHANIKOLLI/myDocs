CSAP - Certified Solution Architect - Professional

  - ABILITY TO DESIGN and Deploy 
     - Dynamically scalable
     - Highly Available
     - Highly Reliable
     - Fault tolerant  and reliable applications on AWS.
  - Migrate Complex and Multi tier Applications on AWS.
  - Design and Deploy Enterprise wide scalable operations on AWS
  - Implement cost control Strategies.

  
AWS SolArchProfessional:

1.0 Design for Organization Complexity:
  - AWS Organization
  - Cross Account Access
  - Tagging
  - Security across Accounts

2.0 Design Networks for Complex Organizations:
  - VPN
  - AWS DIRECT CONNECT
  - VPC PEERING
  - NETWORK SECURITY (EP, NACL,SG )
  - AWS TRANSIT GATEWAY
  - NTWRK LB
  - PRVT HOSTED ZONE 
  - OTHER ROUTING POLICIES
  - GEOPROXIMITY ROUTING POLICY
  - Complex networking Configuration
  - SAML federation

2.1 Design for new solutions:
 - AWS directory Service
 - AWS cognito
 - IAM credentials  and Access mgmt roles
 - encryption in S3,KMS,EBS
 - AWS certificate mgr
 - AWS insector
 - AWS Guard Duty
 - AWS Sheild
 - Security against Man-in-middle attacks
 - Securing against DDOS attacks
 - EC2 intrusion Detection and Prevention
 - The Key mgmt service

2.2 Solution Strategy to meet reliability requirements:
 - Disaster recovery Platforms
 - EC2-Autoscaling
 - Network Redundancy
 - route 53 Health Checks
 - AWS lambda and SQS
 - S3- Cross region replications
 - Dynamo DB HA

2.3 Solution to meet performance Objectives:
 - Cloud Front with S3
 - Data Analytics
 - Amazon Machine Learning tools
 - Amazon Athena
 - Amazon Workspaces
 - Amazon App stream 
 - AWS Kinesis Data Stream
 - kinesis Data Firehouse
 - Instance Types
 - API gateway AWS Lambda
 - Labs AWS Batch

3.Migration Planning:
 - Data Transfer methods
 - Data Migration Services
 - Migrating Workloads uses cases

4. Cost Control:
 - AWS cost Explorer
 - Cost Consideration
 - EC2 Cost optimization
 - S3 Intelligent tiering/storage classes

5. Continuous Improvement for Existing Solutions:
 - Security
 - CI and CD tools
 - Blue Green Deployments
 - Rolling deployments
 - Elastic beanstalk
 - Elastic Container Service
 - AWS Ops Works
 - Improving Network Performance
 - Compute HA
 - EBS HA
 - AWS Storage Gateway
 - EFS
 - Serverless Application Model
 - Network Devices HA
 - AWS Tools
 - Improving Performance of Applications

=================================================================================
               1.1 Design for Organization Complexity - AWS Organization
=================================================================================

AWS Organization:
   - Multiple AWS master accounts can be controlled using AWS Organizations.
   - This AWS Organization can be create from one MAster account and we can add
     the remaining account as the members.
   - We can group accounts into organizational units.
   - We can have consolidated billing for all the accounts under AWS organization.

   - The resources usages can be controlled through 'Service Control policies' in the
     AWS organizations. These are applied to root level. 


=================================================================================
=================================================================================
               1.2 Design for Organization Complexity -  Cross Account Access p173789 o512790
=================================================================================
   Let's give our S3 access to user in other AWS account:
   from present account (say id:123456789)
     -> Click on Create a role in IAM section.
     -> Choose another aws account 
     -> give other aws account-id (to which you are trying to give access. say id:123456790) 
          NOTE: (click on the account name -> my account on top right banner in mgmt 
                console to see the account id)
     -> can select MFA / external id if required. while creating.
     -> attach permission policies 
     -> Click on create role.
     -> Click on the newly created ROLE and Copy the Role ARN (in sumary section ).
     -> Now goto that AWS account (say 123456790) to which you are trying to give access.
     -> goto IAM select an user to whom we need to give access
     -> Click on that user -> permissions -> inline policies -> Click on JSON
     -> try to add the code in below format. and attach it to user
     -----------------------------------------------------------------------------
      {
        "Version":"2020-03-27",
        "Statement": {
          "Effect": "Allow",
          "Action": "sts:AssumeRole" #sts - Security Token Service -Assumed Role.
          "Resource": "arn:aws:iam::123456789:role/externals3role" #This is the arn copied earlier.
        }

      }
     -----------------------------------------------------------------------------
     -> Now login with that user.
     -> by default he can't see anything.
     -> Now click on the Switch role.
         NOTE: (click on the account name -> switch role on top right banner of the mgmt console)
     -> Give the account ID 123456789 and role name created in that account.
     -> Now click on switch role that's it.
                
=================================================================================
=================================================================================
               1.3 Design for Organization Complexity -  Tagging
=================================================================================
 Tags:
   - Metadata in the form of key value pair.
   - easy to search and filter.

 Tags Types:
   - Technical Tags:
       Name,AppID,AppRole,Cluster,Env,Version
   - Tags for Automation:
       DateandTime, Opt-in/Opt-out, Security
   - Business tags:
       Owner, Business Unit, Customer, Project Name
   - Security Tags:
       Confidentiality, and Compliance.
  Strategies:
    - Tags for AWS console Organization: easy to search and filter resources
    - Tags for Cost Allocation: 
        - This eables detailed Billng report
        - Customer can activate an AWS generated createdBy tag to Avoid uncategorized resources.
    - Tags for Automation:
        Automation tags are used for opt-in and Opt-out of automated tasks to identify  
        specific version of resources to achive update or delete.
    - Tags for Access Control:
        - IAM support tag based conditions 
        - Enable constraints based on the tags

  Best Practises:
      - Create stadardised tags in case sensitive format.
      - Too many tags are better than few tags.
      - Leverage automated tools such as Resource Groups
      - Be watchful while editing tags.

=================================================================================
               1.4 Design for Organization Complexity -  Security across Accounts
=================================================================================

 Security in Single Account:
   - IAM 
 Mgmt and governanace:
   - Amazon Cloud Watch: Manage Metrics, Trace logs
   - AWS Cloud Trail: Monitor allAPI activity
   - AWS Config: Manage All Confguration of resources 
   - AWS Organizations: Centralized control of Multiple AWS Accounts

 Strategy:
   Master account ---> security account --> Developer Accont
                                        --> Production Account

   - In the above schema centralized security account:
            - should only be used to store logs.
            - should have limited user access.
            - should not have ability to delete LOGS.


=================================================================================
=================================================================================
               2.0 Design for Organization Complexity -  VPN
=================================================================================
 
  -  If the organization of mid size workloads:
         - 10-100Mi or  1Gi of workload , then go for VPN
         - if 100s of TB's of workload ,then  go for Direct Connect.

      AWS Site-to-Site VPN :
       An IPSec VPN connection b/w your VPC and your remote Network.
       - Virtual Private Gateway -  On the AWS side of site-to-site VPN Connection.
       - Customer Gateway - On the remote side of Site-to-Site VPN Connection. (customer connecting from outside)
       
      AWS Client VPN: 
        - A managed client based VPN service that enables you to securely access your AWS resources
        in your on premise network.
        - With AWS  Client VPN, you configure an endpoint to which your users can connect to establish 
        a secure TLS VPN Session. You can access resources in AWS or an on-premises from any location
        using an openVPN-based VPN Client.
    
      AWS Cloud VPN:
         - If you have more than one remote n/w, you can create multiple AWS Site-to-Site VPN connections
           via your virtual private gateway to enable communication between these networks.
         
         - we can use these if we have multiple branches.


      AWS Site-to-Site VPN:
         - Lets say we want to connect to VPC which is having Private subnet
           (It would not have public IP) that from the data centre.
         - Then we need to create a Virtual Private Gateway and attach it to the VPC:
              - It will have ASN (Autonomous System Number). It's unique number to identify autonoumous 
                  system/globally. Once it is associated with VPG  we can't change the ASN once created.
              - if we dont specify the ASN number , then it create a default Number 64512.               
              - after that we have to mention the private subnets in route tables.
         - On the remote side, we have to configure Customer Gateway (Hardware device or software application):
                 - Examples of AWS customer gateway devices:
                     - Cisco ASA running Cisco ASA 8.2 or later.
                     - Cisco IOS running Cisco IOS 12.4 or later.
                     - juniper J-series running JunOS 9.5 (or later)  software.
                     - Microsoft Windows Server 2012 R2 (or later) Software.
              - On the customer gateway side We have to give internet routable IP Address Static.
              - and the other one is routable table:
                    - static/dynamic type it depens on make and build of device.

         - When both the VPG and Customer gateway is established then IPsec VPN Tunnel is established.
         - Customer gateway is responsible for the IPSec Tunnelling and it is tuned on when traffic is 
           generated from the  Customer Gateway.
         - NOTE: If we need to transfer 100's of TB's of PetaBytes like Data Migration. Choose AWS Direct 
           Connect. 

============================================================================
     2.0 Design Networks for Complex Organizations: - AWS DIRECT CONNECT
============================================================================
 
  - This is used to link an internal network to an AWS Direct Connect location.
    The Connection is established over a standard ethernet fiber-optic cable.
  - Once you have a Direct Connect link, you can then create virtual interfaces to access the AWS Services.
  - Using this interfaces you can access the public services such as Amazon s3. This access is 
    established via the AWS Backbone network and bypass the network.
  - NOTE: this AWS DIrect connect is used  if we need Higher bandwith and consistent connections.


  - Virtual Interfaces:
     - Private/Public Interfaces - This can be used to access the Amazon VPC using
       the private IP address and AWS Public services using the public IP addresses.
     - Transit virtual Interfaces - This can be used to access one or more Amazon VPC Transit Gateways
       that are associated with Direct Connect gateways.


         
































