CSAP - Certified Solution Architect - Professional

  - ABILITY TO DESIGN and Deploy 
     - Dynamically scalable
     - Highly Available
     - Highly Reliable
     - Fault tolerant  and reliable applications on AWS.
  - Migrate Complex and Multi tier Applications on AWS.
  - Design and Deploy Enterprise wide scalable operations on AWS
  - Implement cost control Strategies.

  
AWS SolArchProfessional:

1.0 Design for Organization Complexity:
  - AWS Organization
  - Cross Account Access
  - Tagging
  - Security across Accounts

2.0 Design Networks for Complex Organizations:
  - VPN
  - AWS DIRECT CONNECT
  - VPC PEERING
  - NETWORK SECURITY (EP, NACL,SG )
  - VPC Endpoints
  - AWS TRANSIT GATEWAY
  - NTWRK LB
  - PRVT HOSTED ZONE 
  - OTHER ROUTING POLICIES
  - GEOPROXIMITY ROUTING POLICY
  - Complex networking Configuration
  - SAML federation

2.1 Design for new solutions:
 - AWS directory Service
 - AWS cognito
 - IAM credentials  and Access mgmt roles
 - encryption in S3,KMS,EBS
 - AWS certificate mgr
 - AWS insector
 - AWS Guard Duty
 - AWS Sheild
 - Security against Man-in-middle attacks
 - Securing against DDOS attacks
 - EC2 intrusion Detection and Prevention
 - The Key mgmt service

2.2 Solution Strategy to meet reliability requirements:
 - Disaster recovery Platforms
 - EC2-Autoscaling
 - Network Redundancy
 - route 53 Health Checks
 - AWS lambda and SQS
 - S3- Cross region replications
 - Dynamo DB HA

2.3 Solution to meet performance Objectives:
 - Cloud Front with S3
 - Data Analytics
 - Amazon Machine Learning tools
 - Amazon Athena
 - Amazon Workspaces
 - Amazon App stream 
 - AWS Kinesis Data Stream
 - kinesis Data Firehouse
 - Instance Types
 - API gateway AWS Lambda
 - Labs AWS Batch

3.Migration Planning:
 - Data Transfer methods
 - Data Migration Services
 - Migrating Workloads uses cases

4. Cost Control:
 - AWS cost Explorer
 - Cost Consideration
 - EC2 Cost optimization
 - S3 Intelligent tiering/storage classes

5. Continuous Improvement for Existing Solutions:
 - Security
 - CI and CD tools
 - Blue Green Deployments
 - Rolling deployments
 - Elastic beanstalk
 - Elastic Container Service
 - AWS Ops Works
 - Improving Network Performance
 - Compute HA
 - EBS HA
 - AWS Storage Gateway
 - EFS
 - Serverless Application Model
 - Network Devices HA
 - AWS Tools
 - Improving Performance of Applications

=================================================================================
               1.1 Design for Organization Complexity - AWS Organization
=================================================================================

AWS Organization:
   - Multiple AWS master accounts can be controlled using AWS Organizations.
   - This AWS Organization can be create from one MAster account and we can add
     the remaining account as the members.
   - We can group accounts into organizational units.
   - We can have consolidated billing for all the accounts under AWS organization.

   - The resources usages can be controlled through 'Service Control policies' in the
     AWS organizations. These are applied to root level. 


=================================================================================
=================================================================================
               1.2 Design for Organization Complexity -  Cross Account Access p173789 o512790
=================================================================================
   Let's give our S3 access to user in other AWS account:
   from present account (say id:123456789)
     -> Click on Create a role in IAM section.
     -> Choose another aws account 
     -> give other aws account-id (to which you are trying to give access. say id:123456790) 
          NOTE: (click on the account name -> my account on top right banner in mgmt 
                console to see the account id)
     -> can select MFA / external id if required. while creating.
     -> attach permission policies 
     -> Click on create role.
     -> Click on the newly created ROLE and Copy the Role ARN (in sumary section ).
     -> Now goto that AWS account (say 123456790) to which you are trying to give access.
     -> goto IAM select an user to whom we need to give access
     -> Click on that user -> permissions -> inline policies -> Click on JSON
     -> try to add the code in below format. and attach it to user
     -----------------------------------------------------------------------------
      {
        "Version":"2020-03-27",
        "Statement": {
          "Effect": "Allow",
          "Action": "sts:AssumeRole" #sts - Security Token Service -Assumed Role.
          "Resource": "arn:aws:iam::123456789:role/externals3role" #This is the arn copied earlier.
        }

      }
     -----------------------------------------------------------------------------
     -> Now login with that user.
     -> by default he can't see anything.
     -> Now click on the Switch role.
         NOTE: (click on the account name -> switch role on top right banner of the mgmt console)
     -> Give the account ID 123456789 and role name created in that account.
     -> Now click on switch role that's it.
                
=================================================================================
=================================================================================
               1.3 Design for Organization Complexity -  Tagging
=================================================================================
 Tags:
   - Metadata in the form of key value pair.
   - easy to search and filter.

 Tags Types:
   - Technical Tags:
       Name,AppID,AppRole,Cluster,Env,Version
   - Tags for Automation:
       DateandTime, Opt-in/Opt-out, Security
   - Business tags:
       Owner, Business Unit, Customer, Project Name
   - Security Tags:
       Confidentiality, and Compliance.
  Strategies:
    - Tags for AWS console Organization: easy to search and filter resources
    - Tags for Cost Allocation: 
        - This eables detailed Billng report
        - Customer can activate an AWS generated createdBy tag to Avoid uncategorized resources.
    - Tags for Automation:
        Automation tags are used for opt-in and Opt-out of automated tasks to identify  
        specific version of resources to achive update or delete.
    - Tags for Access Control:
        - IAM support tag based conditions 
        - Enable constraints based on the tags

  Best Practises:
      - Create stadardised tags in case sensitive format.
      - Too many tags are better than few tags.
      - Leverage automated tools such as Resource Groups
      - Be watchful while editing tags.

=================================================================================
               1.4 Design for Organization Complexity -  Security across Accounts
=================================================================================

 Security in Single Account:
   - IAM 
 Mgmt and governanace:
   - Amazon Cloud Watch: Manage Metrics, Trace logs
   - AWS Cloud Trail: Monitor allAPI activity
   - AWS Config: Manage All Confguration of resources 
   - AWS Organizations: Centralized control of Multiple AWS Accounts

 Strategy:
   Master account ---> security account --> Developer Accont
                                        --> Production Account

   - In the above schema centralized security account:
            - should only be used to store logs.
            - should have limited user access.
            - should not have ability to delete LOGS.


=================================================================================
=================================================================================
               2.0 Design for Organization Complexity -  VPN
=================================================================================
 
  -  If the organization of mid size workloads:
         - 10-100Mi or  1Gi of workload , then go for VPN
         - if 100s of TB's of workload ,then  go for Direct Connect.

      AWS Site-to-Site VPN :
       An IPSec VPN connection b/w your VPC and your remote Network.
       - Virtual Private Gateway -  On the AWS side of site-to-site VPN Connection.
       - Customer Gateway - On the remote side of Site-to-Site VPN Connection. (customer connecting from outside)
       
      AWS Client VPN: 
        - A managed client based VPN service that enables you to securely access your AWS resources
        in your on premise network.
        - With AWS  Client VPN, you configure an endpoint to which your users can connect to establish 
        a secure TLS VPN Session. You can access resources in AWS or an on-premises from any location
        using an openVPN-based VPN Client.
    
      AWS Cloud VPN:
         - If you have more than one remote n/w, you can create multiple AWS Site-to-Site VPN connections
           via your virtual private gateway to enable communication between these networks.
         
         - we can use these if we have multiple branches.


      AWS Site-to-Site VPN:
         - Lets say we want to connect to VPC which is having Private subnet
           (It would not have public IP) that from the data centre.
         - Then we need to create a Virtual Private Gateway and attach it to the VPC:
              - It will have ASN (Autonomous System Number). It's unique number to identify autonoumous 
                  system/globally. Once it is associated with VPG  we can't change the ASN once created.
              - if we dont specify the ASN number , then it create a default Number 64512.               
              - after that we have to mention the private subnets in route tables.
         - On the remote side, we have to configure Customer Gateway (Hardware device or software application):
                 - Examples of AWS customer gateway devices:
                     - Cisco ASA running Cisco ASA 8.2 or later.
                     - Cisco IOS running Cisco IOS 12.4 or later.
                     - juniper J-series running JunOS 9.5 (or later)  software.
                     - Microsoft Windows Server 2012 R2 (or later) Software.
              - On the customer gateway side We have to give internet routable IP Address Static.
              - and the other one is routable table:
                    - static/dynamic type it depens on make and build of device.

         - When both the VPG and Customer gateway is established then IPsec VPN Tunnel is established.
         - Customer gateway is responsible for the IPSec Tunnelling and it is tuned on when traffic is 
           generated from the  Customer Gateway.
         - NOTE: If we need to transfer 100's of TB's of PetaBytes like Data Migration. Choose AWS Direct 
           Connect. 

============================================================================
     2.0 Design Networks for Complex Organizations: - AWS DIRECT CONNECT
============================================================================
 
  - This is used to link an internal network to an AWS Direct Connect location.
    The Connection is established over a standard ethernet fiber-optic cable.
  - Once you have a Direct Connect link, you can then create virtual interfaces to access the AWS Services.
  - Using this interfaces you can access the public services such as Amazon s3. This access is 
    established via the AWS Backbone network and bypass the network.
  - NOTE: this AWS DIrect connect is used  if we need Higher bandwith and consistent connections.


  - Virtual Interfaces:
     - Private/Public Interfaces - This can be used to access the Amazon VPC using
       the private IP address and AWS Public services using the public IP addresses.
     - Transit virtual Interfaces - This can be used to access one or more Amazon VPC Transit Gateways
       that are associated with Direct Connect gateways.

===============================================================================
     NOTE: for windows IIS Server - default location for deployment -
           C:\inetpub\wwwroot\
===============================================================================

============================================================================
     2.0 Design Networks for Complex Organizations: - VPC Peering
============================================================================

 - This is a network connection beween the two VPC's 
 - Traffic  can be routed across the VPC Peering Connection.
 - The two VPC's can be in different AWS accounts.
 - They can also be in different regions.

 Implentation of vpc peering:
    - One VPC must send req to another vpc for VPC Peering connection.
    - The destination VPC must accept the VPC peering connection request.
    - Routes must be added to both the route tables on both vpc's
    - Also ensure security groups allow Inbound Traffic.
     connections:
       - GO to VPC dashborad and create vpc's:
         vpcA (20.0.0.0/16) 
         vpcB (10.0.0.0/16)   
         vpcC (10.0.0.0/16)          

       - GO to VPC dashborad after creating vpc's. :
          - Then go to peering connections on the left
          - Create vpc peering connection as below and add the cidr entry in the route tables 
          of both vpc's:

         vpcA (20.0.0.0/16) <--> vpcB (10.0.0.0/16)   
         vpcA (20.0.0.0/16) <--> vpcC (10.0.0.0/16)

         vpcA to vpcB works and vpcA to vpcC works.But vpcB to vpcC dosn't work automatically         
         also can't establish peering connection since both B and C CIDR looks same.

         if we want to establish connection , better to mention the subnet range. (10.0.0.0/24).
         THen B (10.0.0.0/16) <--> c (10.0.0.0/24) will work.

 Charesterstics of VPC Connection:
    - The VPC's for whichyou want to implement VPC Peering can't have overalapping CIDR blocks.
    - you can't extend the peering relationship to that connection if :
      - A VPN Connection or an AWS Direct connect connection.
      - An internet connection via internet gateway.
      - An internet connection in the private subnet via a NAT Device.
      - A Gateway VPC Endpoint.

      
==============================================================================================
     2.0 Design Networks for Complex Organizations: - NETWORK SECURITY (EP, NACL,SG )
==============================================================================================
     When we create vpc with CIDR AWS uses 1st 5 ip addresses. ex: 10.0.0.0/24
       - 10.0.0.0  Network Address
       - 10.0.0.1  Reserved for AWS VPC Router
       - 10.0.0.2 Reserved by AWS. The IP address of the DNS server is always n/w base address +2.
          NOTE: if we have multiple CIDR blocks, then DNS server located on primary CIDR.
       - 10.0.0.3 Reserved by AWS future use.
       - 10.0.0.255 Network Broadcast Address. However AWS desnot support n/w broadcast. So it is reserved.


     SECURITY GROUPS: STATEFUL:works at Instance level:
      - can be applied to ELB, EC2, EMR, LAMBDA 
      - proctects Instances by applying security rules like firewall.
      - we can configur re rules on security groups for different type of requests like
        HTTP,HTTPS,UDP,ICMP and port numbers.

      - By default when a new security group is created. It 'denies' all Incoming/Inbound traffic.
      - By default Outgoing/outbound traffic is allowed.
      - These are called 'stateful' because if inbound traffic is  allowed outgoing is 
        automatically alowed.

     NACL: Network Access Control Lists: works at Subnet Level: STATELESS
       - These works at subnet level.
       - Manually enable both inbound/outbound traffic IP and ports.
       - It consists of ordered rules:
           - Rule number
           - Protocols
           - The source of the traffic (CIDR range) and destination (listening port or port range (Inbound Only)
           - The destination of the traffic (CIDR range) and destination (listening port or port range (Outbound Only)
       - CHOICE to ALLOW/DENY specific traffic. 

      - default NACL allows all the traffic by default,
      - Custom NACL denies all the traffic by default.

         - It has rule numbers, and the rule numbers are applicable in the order of
           100 ,200,300  (ascending order of rule number ) 
           ex:
           100  ssh(22) protocol (tcp)  portrange(22)  cidr(22.65.32.1/32)  ALLOW
           200  HTTP(80) protocol (tcp)  portrange(80)  cidr(22.65.32.1/32)  ALLOW
           300  ssh(22) protocol (tcp)  portrange(22)  cidr(22.65.32.2/32)  ALLOW           
           *  All traffic  ALL             ALL           0.0.0.0/0           DENY

         - Each rule number has port number port type and protocol number.

    NOTE: Opening same ports in NACL Inbound and Outbound does not work. We need to use 
    ephermal port range in the Outbound.

    Outbound NACL should use epehermal Ports range as mentioned below.

    NACL Ephermal Ports: (clients network generates requests with any port no. mentioned in the range )
      - Many Linux Kernels (Including the Amazon linux Kernel ) use ports (32768-61000)
      - Requests Originating from Elastic Load balancing use ports (1024-65536)
      - Windows OS thriugh Windows Server 2003 use ports 1025-5000  
      - Windows Server 2008 and later versions use ports 49125-65535
      - A NAT Gateway uses ports 1024-65535.
   
==============================================================================================   
   2.0 Design Networks for Complex Organizations:   - VPC Endpoints
==============================================================================================

   -  VPC Endpoints 
        - These endpoints are virtual devices.
        - These devices are horizontally scaled, redundant and highly available.
        - There are two types of endpoints:
              - Interface:
                  - The interface endpoint is used to connect to other AWS Devices.
              - Gateway:
                  - The Gateway endpoint is used to connect to S3 and DynamoDB.
   Implementation:
     - Goto VPC dashboard, create VPC with public and private subnet vpc using vpc wizard.
     - You need to use a NAT Gateway/NAT Instance while creating a VPC
         - NAT Gateway is managed by AWS and it needs EIP (Elastic IP)
         - NAT instance is not robust and it can be single point of failure. But charges are less.
     - If we dont want to use either of the above, then  use them while creating and later we can 
        remove it in the 'Routes Tables' and NAT Gateway section of VPC.

     - To attach an Endpoint to VPC:
          - Goto VPC Dashboard ,Click on Endpoint
          - Click create an endpoint 
          - Choose the AWS service (for example S3 if we want to)
          - Select VPC to which we need to attach the endpoint.
          - Select the subnet (public / private  to which you want to attach endpoint)
          - Select the access Policy.
          - Create the endpoint.
   

==============================================================================================   
   2.0 Design Networks for Complex Organizations:  - Transit Gateways
==============================================================================================
    
      - We can use Transit gateways instead ,if we have more vpc and VPC Peering connections.
      - This Trasit Gateway is like a Hub that can be used to connect the VPC n/w together.
      - We can also have a connection to you on permise network.
      - There is also a route table defined withing the Transit Gateway.
      - This route table allows both IPV4 and IPV6 CIDR and targets 
      - Transit gateways support static and dynamic routing b/w the VPCs and VPN Connection.

      Implementation:
        -  Goto VPC DashBoard
        -  Scroll down on left side and look for Transit gateway
        -  Click on Transit gateway and create Transit gateway.
        -  Now  Find the Transit gateway attachment below the transit gateway and click on it.
        -  Select the transit gateway 
        -  Select the VPC to attach and subnet to attach and click on create ransit gateway attachement
        -  Repeat above 3 steps  for attaching the another VPC.

        - Select the Server and its Subnet from which you want to connect to other vpc.
        - Now go to the subnet and select the subnet and select the route table 
        - Now click on the Routes and edit the routes (add the CIDR of VPC which we want to connect to)
          and attach the transit gateway attachment.
        - Repeat the above 3 steps for on the other Server to complete the connectivity setup.

==============================================================================================   
    2.0 Design Networks for Complex Organizations:  - NETWORK LOAD BALANCER
==============================================================================================

     - Create the target group with protocol 'TCP' and select the VPC in which you have the instances.
     - This is a Load balancer that works for layer 4 of the OSI Model.
     - It has capacity to handle millions of requests for second.
     - You can enable the load balancer to work from different Availability Zones 
       for added high availability.
     - You can also assign static address for the Load balancer.
     - Each instance on the target group can listen on a different port number.



==============================================================================================
     2.0 Design Networks for Complex Organizations: - SAML federation
==============================================================================================
        
==============================================================================================
     2.1 Design for new solutions: - AWS directory Service
==============================================================================================
    AWS Directory Services Types:     
     
        - AWS Managed Microsoft AD
        - Simple AD
        - AD Connector
        - Amazon incognito User Pools.

    - AWS Managed Microsoft AD:

        - This is Microsoft Managed Active directory as a managed service .
        - This is powered by Microsoft Windows Server 2012 R2 and is highly available.
        - With AWS Managed Microsoft AD, you can run directory aware workloads in AWS Cloud.

    - Simple AD:

       - This is a standard managed directory that uses Samba 4 Active Directory Compatible 
         server.
          - THere are two sizes available, -small for support of 500 Users.
          - Large which supports upto 5000 Users.
          - Simple AD provides subset of features that are offered by AWS managed Services. 

    - Active Directory Connector: 

          - This can be used to redirect directory requests to on-premise defined Microsoft 
             Active Directory.

          - This is useful when companies already have a large deployment of Active Directory 
             in thier on-premise environment.

          - Here they can use thier existing applications to log onto AWS applications such as
            Amazon Workspaces, Amazon WorkDocs and Amazon WorkMail.

==============================================================================================
    2.1 Design for new solutions: - Simple AD
==============================================================================================
      
    GoTo Amazon Directory Service:
      Choose the directory,
      Give the Directory Name (DNS Name) , Admin Password. 
      Choose the vpc and subnets and click on create Directory.

      Create the Role using below policies
    - Roles:
        - AMAZONssmDirectoryServiceAccess
        - AmazonSSMmanagedInstanceCore

     While creating EC2, select the Domain Join Directory (select Domain VPC) and IAM
     under the Instance configuration section.


































